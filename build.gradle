plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}


group = 'com.polarbookshop'
version = '0.0.1-SNAPSHOT'

description = 'This Service, provides functionality for managing the books in the catalog'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
	sourceCompatibility =  JavaVersion.VERSION_17
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.3")
	set('testContainersVersion', "1.19.8")
	set('mapStructVersion', "1.5.5.Final")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.retry:spring-retry'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'

	implementation "org.mapstruct:mapstruct:${mapStructVersion}"

	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly "io.netty:netty-resolver-dns-native-macos:4.1.111.Final:osx-aarch_64"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
	// Testcontainers dependencies
	testImplementation "org.testcontainers:postgresql:${testContainersVersion}"
	testImplementation "org.testcontainers:junit-jupiter:${testContainersVersion}"


	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"

}

tasks.named('test') {
	useJUnitPlatform()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}



dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "org.testcontainers:testcontainers-bom:${testContainersVersion}"
	}
}

bootRun {
	systemProperty 'spring.profiles.active', 'testData'
}
